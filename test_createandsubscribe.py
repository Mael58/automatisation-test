# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options as ChromeOptions
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestCreateandsubscribe():
  def setup_method(self, method):
    service = Service(executable_path='./browsers/chromedriver-linux64/chromedriver')
    options = ChromeOptions()
    options.binary_location = './browsers/chrome-linux64/chrome'
    self.driver = webdriver.Remote(command_executor='http://localhost:4444', options = FirefoxOptions())
    self.driver = webdriver.Remote(command_executor='http://localhost:4444', options = ChromeOptions())
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_createandsubscribe(self):
    self.driver.get("http://localhost:5000/events")
    self.driver.set_window_size(1015, 832)
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("marathon")
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("semi marathon")
    self.driver.find_element(By.ID, "is_free").click()
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("portes ouvertes")
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > a").click()
    self.driver.find_element(By.LINK_TEXT, "Subscribe for free").click()
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
  
