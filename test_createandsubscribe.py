# Generated by Selenium IDE
import pytest
from selenium import webdriver
from selenium.webdriver.chrome.options import Options as ChromeOptions
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.common.by import By
from dotenv import load_dotenv
import os

class TestCreateandsubscribe():
  def setup_method(self, method):
    load_dotenv()
    self.driver = None
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  @pytest.mark.parametrize('options, browser', [(ChromeOptions(), 'chrome'), (FirefoxOptions(), 'firefox')])
  def test_createandsubscribe(self, options, browser):
    self.driver = webdriver.Remote(command_executor='http://localhost:4444', options = options)
    self.driver.get("http://{target_host}:{target_port}/events".format(
      target_host=os.getenv('TARGET_HOST', 'localhost'),
      target_port=os.getenv('TARGET_PORT', '5000')))
    self.driver.set_window_size(1015, 832)
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("marathon")
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("semi marathon")
    self.driver.find_element(By.ID, "is_free").click()
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.ID, "event_title").click()
    self.driver.find_element(By.ID, "event_title").send_keys("portes ouvertes")
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > a").click()
    self.driver.find_element(By.LINK_TEXT, "Subscribe for free").click()
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
  
